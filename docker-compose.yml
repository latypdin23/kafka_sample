version: '3.9'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    healthcheck:
      test: ["CMD", "nc", "-z", "zookeeper", "2181"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app_network

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://kafka:9093
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_BROKER_ID: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    depends_on:
      zookeeper:
        condition: service_healthy
    networks:
      - app_network

  servicea:
    image: servicea
    depends_on:
      - kafka
    build:
      context: .
      dockerfile: ServiceA/Dockerfile
    environment:
      KAFKA_BROKER: kafka:9092
    networks:
      - app_network

  serviceb:
    image: serviceb
    depends_on:
      - kafka
    build:
      context: .
      dockerfile: ServiceB/Dockerfile
    environment:
      KAFKA_BROKER: kafka:9092
    networks:
      - app_network

networks:
  app_network:
    driver: bridge
